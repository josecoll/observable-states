buildscript {
    ext.corda_release_version = '3.0-ENT-RC01'
    ext.corda_gradle_plugins_version = '3.0.2'
    ext.kotlin_version = '1.1.60'
    ext.quasar_version = '0.7.9'
    ext.junit_version = '4.12'
    ext.jolokia_version = '1.3.7'

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven {
            credentials {
                username "jose.coll"
                password "Password123!"
            }
            url 'https://ci-artifactory.corda.r3cev.com/artifactory/enterprise-release'
        }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "net.corda.plugins:cordformation:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:quasar-utils:$corda_gradle_plugins_version"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version"
    }
}

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda-releases' }
}

apply plugin: 'kotlin'
apply plugin: 'net.corda.plugins.cordformation'
apply plugin: 'net.corda.plugins.quasar-utils'

sourceSets {
    main {
        resources {
            srcDir "config/dev"
        }
    }
    test {
        resources {
            srcDir "config/test"
        }
    }
    integrationTest {
        kotlin {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/kotlin')
        }
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile "junit:junit:$junit_version"

    // Corda integration dependencies
    compile "com.r3.corda.enterprise:corda-core:$corda_release_version"
    compile "com.r3.corda.enterprise:corda-finance:$corda_release_version"
    compile "com.r3.corda.enterprise:corda-jackson:$corda_release_version"
    compile "com.r3.corda.enterprise:corda-rpc:$corda_release_version"
    compile "com.r3.corda.enterprise:corda-node-api:$corda_release_version"
    compile "com.r3.corda.enterprise:corda-webserver-impl:$corda_release_version"
    runtime "com.r3.corda.enterprise:corda:$corda_release_version"
    runtime "com.r3.corda.enterprise:corda-webserver:$corda_release_version"

    testCompile "com.r3.corda.enterprise:corda-node-driver:$corda_release_version"

    // CorDapp dependencies
    // Specify your CorDapp's dependencies below, including dependent CorDapps.
    // We've defined Cash as a dependent CorDapp as an example.
    cordapp project(":cordapp")
    cordapp "com.r3.corda.enterprise:corda-finance:$corda_release_version"
}

task integrationTest(type: Test, dependsOn: []) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        languageVersion = "1.1"
        apiVersion = "1.1"
        jvmTarget = "1.8"
        javaParameters = true   // Useful for reflection.
    }
}

task deployNodes(type: net.corda.plugins.Cordform, dependsOn: ['jar']) {
    directory "./build/nodes"
    node {
        name "O=Controller,L=London,C=GB"
        notary = [validating : true]
        p2pPort 10002
        rpcPort 10003
        cordapps = [
                "$project.group:shared:$project.version",
                "com.r3.corda.enterprise:corda-finance:$corda_release_version"
        ]
    }
    node {
        name "O=PartyA,L=London,C=GB"
        p2pPort 10005
        rpcPort 10006
        webPort 10007
        cordapps = [
                "$project.group:shared:$project.version",
                "$project.group:cordapp:$project.version",
                "com.r3.corda.enterprise:corda-finance:$corda_release_version"
        ]
        rpcUsers = [[ user: "user1", "password": "test", "permissions": []]]
    }
    node {
        name "O=PartyB,L=New York,C=US"
        p2pPort 10008
        rpcPort 10009
        webPort 10010
        cordapps = [
                "$project.group:cordapp:$project.version",
                "com.r3.corda.enterprise:corda-finance:$corda_release_version"
        ]
        rpcUsers = [[ user: "user1", "password": "test", "permissions": []]]
    }
}

task runTemplateClient(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.template.ClientKt'
    args 'localhost:10006'
}